<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>架构 on 浮华生</title><link>https://www.ahianzhang.com/categories/%E6%9E%B6%E6%9E%84/</link><description>Recent content in 架构 on 浮华生</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 16 Mar 2022 11:47:50 +0800</lastBuildDate><atom:link href="https://www.ahianzhang.com/categories/%E6%9E%B6%E6%9E%84/index.xml" rel="self" type="application/rss+xml"/><item><title>电商搜索技术总结</title><link>https://www.ahianzhang.com/post/summary18/</link><pubDate>Wed, 16 Mar 2022 11:47:50 +0800</pubDate><guid>https://www.ahianzhang.com/post/summary18/</guid><description>回顾 本篇文章我们针对于上文”电商搜索业务总结“中的业务需求进行拆解，并以技术角度进行分析。 对于关系好的商户我想把他们的品牌优先展示，增加曝光</description></item><item><title>rabbitmq 如何提高可靠性并保证消费端幂等</title><link>https://www.ahianzhang.com/post/rabbitmq-reliability/</link><pubDate>Sun, 29 Mar 2020 18:09:13 +0000</pubDate><guid>https://www.ahianzhang.com/post/rabbitmq-reliability/</guid><description>什么是消息的可靠性 简单讲就是，一条消息由生产者发送出来，到 broker 上，存储到消息队列，再被消费者成功的消费。如果消息传着传着就传没了，此时消息就是</description></item><item><title>面向对象的理解</title><link>https://www.ahianzhang.com/post/object-oriented-mind/</link><pubDate>Tue, 08 Oct 2019 12:12:20 +0000</pubDate><guid>https://www.ahianzhang.com/post/object-oriented-mind/</guid><description>背景 说起面向对象的特征，大多数人肯会不加思索的答封装、继承、多态，可能还有抽象。最近在学 DDD 的时候，感觉它更加合理的运用了设计模式和面向对象的</description></item><item><title>企业平台技术框架</title><link>https://www.ahianzhang.com/post/architecture-framework/</link><pubDate>Fri, 27 Sep 2019 11:50:35 +0000</pubDate><guid>https://www.ahianzhang.com/post/architecture-framework/</guid><description>最近看了阿里的 TMF2.0 交易平台的介绍，觉得很有兴趣，所以展开学习，因为认知以及自身水平，对于技术平台框架理解有限，如有不当之处还望斧正。 在说 TMF2.0 之前</description></item><item><title>gitlab 添加代码规范检测</title><link>https://www.ahianzhang.com/post/code-style-check-ali-p3c/</link><pubDate>Wed, 19 Jun 2019 11:00:46 +0000</pubDate><guid>https://www.ahianzhang.com/post/code-style-check-ali-p3c/</guid><description>环境 gitlab 10.5.X + gitlab + ali p3c.pmd 好的代码能让人赏心悦目，方便 CodeReview 进行，为此，必须强制性的将代码规范起来。 如何做 git custom hooks client hooks 客户端钩子是存在本地的，按项目去配，</description></item><item><title>操作系统作用</title><link>https://www.ahianzhang.com/post/os1/</link><pubDate>Sat, 01 Jun 2019 22:36:59 +0000</pubDate><guid>https://www.ahianzhang.com/post/os1/</guid><description>操作系统作用 1、资源管理者 都能管理什么？ 自底向上 对于操作系统内部来讲 硬件资源 像 CPU 、内存、设备（输入输出设备、磁盘、时钟、网卡） 软件资源 磁盘上</description></item><item><title>技术选型怎么做</title><link>https://www.ahianzhang.com/post/technology-choice/</link><pubDate>Thu, 23 May 2019 10:44:21 +0000</pubDate><guid>https://www.ahianzhang.com/post/technology-choice/</guid><description>技术选型包括哪些 从个人观点出发，技术选型包括框架、工具、语言。 需要考虑的点 公司规模 团队技术水平 时间和成本 生态 风险 公司规模 小公司 对于初创公司或</description></item><item><title>迁移到 ubuntu18 的问题及配置</title><link>https://www.ahianzhang.com/post/ubuntu01/</link><pubDate>Sun, 02 Dec 2018 22:29:50 +0000</pubDate><guid>https://www.ahianzhang.com/post/ubuntu01/</guid><description>今天终于下定决心安装了 Ubuntu 系统，将新系统配置成自己熟悉的模式是需要很长的一段时间，更何况是双系统。下面是我遇到的问题，经过搜索与尝试并解决。 执</description></item><item><title>使用 psi-probe 监控 Tomcat</title><link>https://www.ahianzhang.com/post/performanceance-tuning05/</link><pubDate>Thu, 06 Sep 2018 23:51:38 +0000</pubDate><guid>https://www.ahianzhang.com/post/performanceance-tuning05/</guid><description>psi-probe 是一款非常强大的开源 Tomcat 监控工具，使用时可以点击这里下载 配置用户： 在 tomcat/webapps/docs/deployer-howto.html 文档的 manager 下有说明 conf/tomcat-user.xml 1、添加用户 &amp;lt;role rolename=&amp;quot;ahian&amp;quot;/&amp;gt; &amp;lt;role rolename=&amp;quot;manager-gui&amp;quot;/&amp;gt; &amp;lt;role rolename=&amp;quot;manager-status&amp;quot;/&amp;gt; &amp;lt;user username=&amp;quot;ahian&amp;quot; password=&amp;quot;123456&amp;quot; roles=&amp;quot;ahian,manager-gui,manager-status&amp;quot;/&amp;gt; 2、在 conf 文件夹中新建</description></item><item><title>Tomcat 远程 Debug</title><link>https://www.ahianzhang.com/post/performanceance-tuning04/</link><pubDate>Tue, 04 Sep 2018 23:41:22 +0000</pubDate><guid>https://www.ahianzhang.com/post/performanceance-tuning04/</guid><description>JDWP 协议介绍 JDWP 是 Java Debug Wire Protocol 的缩写，它定义了调试器（debugger）和被调试的 Java 虚拟机（target vm）之间的通信协议。 详请参考此文。 远程 Tomcat 服</description></item><item><title>jstack 死循环和死锁定位</title><link>https://www.ahianzhang.com/post/performanceance-tuning03/</link><pubDate>Mon, 03 Sep 2018 22:26:21 +0000</pubDate><guid>https://www.ahianzhang.com/post/performanceance-tuning03/</guid><description>jstack 是用来查看线程的命令 1 jstack [option] &amp;lt;pid&amp;gt; 先来看看线程的状态(官方文档) New Runnable Blocked Waiting Timed_Waiting Terminated 下面是 java 线程状态转化 代码模拟 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20</description></item><item><title>jmap &amp; mat 内存溢出</title><link>https://www.ahianzhang.com/post/performanceance-tuning02/</link><pubDate>Sun, 02 Sep 2018 19:46:08 +0000</pubDate><guid>https://www.ahianzhang.com/post/performanceance-tuning02/</guid><description>模拟内存溢出 S0 和 S1 同时只会有一个使用，另一个是空的。 Metaspace 中主要存放 class 和 methods 等 模拟溢出的环境 堆内存溢出：通过不断地创建对象来将堆内存填充满 非堆内存</description></item><item><title>JVM 常用参数查看</title><link>https://www.ahianzhang.com/post/performanceance-tuning01/</link><pubDate>Sun, 02 Sep 2018 16:57:36 +0000</pubDate><guid>https://www.ahianzhang.com/post/performanceance-tuning01/</guid><description>JVM 参数 标准参数 -X 参数 -XX 参数 标准参数 1 2 3 4 5 6 7 8 -help -server -client -version -showversion -cp -classpath ... X 参数 1 2 3 -Xint:解释执行 -Xcomp：第一次使用就编译成本地代码(</description></item><item><title>VMware 12 NAT网络下配置 ubuntu 16.04 LTS 系统静态 IP</title><link>https://www.ahianzhang.com/post/ubuntu-nat-static-ip-config/</link><pubDate>Wed, 09 May 2018 20:25:53 +0000</pubDate><guid>https://www.ahianzhang.com/post/ubuntu-nat-static-ip-config/</guid><description>镜像是 ubuntu 16.04 server 版，主机是 Windows10 系统，因为要搭建 Hadoop 集群，所以配置一下，将此配置流程在此记录，方便查找。 查看主机 IP ipconfig 系统分配给虚拟机使用的网卡是 VMn</description></item><item><title>谈谈微服务</title><link>https://www.ahianzhang.com/post/microservice1/</link><pubDate>Sat, 25 Nov 2017 21:48:11 +0000</pubDate><guid>https://www.ahianzhang.com/post/microservice1/</guid><description>什么是微服务 微服务是一些协同工作的小而自治的服务。 发展历史 微服务是应运而生，它不是谁发明的，而是现实社会总结出来的一种模式。 特性 我们可以把微</description></item><item><title>单例模式</title><link>https://www.ahianzhang.com/post/design-pattern/</link><pubDate>Mon, 09 Oct 2017 16:24:48 +0000</pubDate><guid>https://www.ahianzhang.com/post/design-pattern/</guid><description>单例模式Singleton 作用：保证整个应用程序中某个实例有且只有一个 类型：饿汉模式和懒汉模式 首先创建一个Pattern类，什么都不写。 1 2</description></item><item><title>tor 使用</title><link>https://www.ahianzhang.com/post/web-1/</link><pubDate>Sat, 16 Sep 2017 13:14:41 +0000</pubDate><guid>https://www.ahianzhang.com/post/web-1/</guid><description>写在前面： 我写本文的目的是为了记录我所探索的世界，严禁做违法犯罪的事情，作者一直保持中立态度来学习。望来者自尊自律。 如果你只是为了翻墙，此文</description></item></channel></rss>