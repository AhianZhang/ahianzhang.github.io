<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>算法 on 浮华生</title><link>https://www.ahianzhang.com/tags/%E7%AE%97%E6%B3%95/</link><description>Recent content in 算法 on 浮华生</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 03 Jul 2019 08:54:36 +0000</lastBuildDate><atom:link href="https://www.ahianzhang.com/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>tf-idf 算法</title><link>https://www.ahianzhang.com/post/tf-idf/</link><pubDate>Wed, 03 Jul 2019 08:54:36 +0000</pubDate><guid>https://www.ahianzhang.com/post/tf-idf/</guid><description>tf-idf (term frequence-inverse document frequence) 词频-逆文档频率，是搜索常用的一个权重相关算法，其作用是评估一个 document 在一整个 document list 中的重要程度，下面分开来讲。 term frequence tf 的意思就是一个词语在一个文件中出现的次数，对于一篇文章， tf 算法会将这篇文章进行分词并统计出现次数。这个词在这篇文章中出现的次数越多则说明越不重要，权重则越低。</description></item><item><title>使用移位运算符</title><link>https://www.ahianzhang.com/post/shift-operator/</link><pubDate>Sat, 26 May 2018 17:31:46 +0000</pubDate><guid>https://www.ahianzhang.com/post/shift-operator/</guid><description>middle = (L+R)/2 这样的写法 L+R 有可能溢出 middle = L + (R-L)/2 =&amp;gt;minddle = L + (R-L)&amp;gt;&amp;gt;1 这样写的好处是不会发生数据溢出，除以 2 则是向右移一位，位运算比算术运算快</description></item><item><title>master 公式</title><link>https://www.ahianzhang.com/post/algorithm-master-formula/</link><pubDate>Sat, 26 May 2018 11:26:46 +0000</pubDate><guid>https://www.ahianzhang.com/post/algorithm-master-formula/</guid><description>master公式 T(N) = a*T(N/b) + O(Nd) N：样本量 T：时间复杂度 a：样本量发生的次数 b：将样本量进行分治 c：执行子过程之外其余过程的时间复杂度 用途：计算递归算法的时间复杂度 快速计算 logba &amp;gt; d -&amp;gt; 复杂度为O(Nlogba) logba = d -&amp;gt; 复杂度为O(Nd* logN) logba &amp;lt; d -&amp;gt; 复杂度为O(Nd) 适用范围 递归调用使，划分的</description></item></channel></rss>