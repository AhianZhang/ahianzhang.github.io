<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>消息队列 on 浮华生</title><link>https://www.ahianzhang.com/tags/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/</link><description>Recent content in 消息队列 on 浮华生</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 29 May 2022 22:24:29 +0800</lastBuildDate><atom:link href="https://www.ahianzhang.com/tags/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/index.xml" rel="self" type="application/rss+xml"/><item><title>RabbitMQ 和 Kafka 应用原理简单对比</title><link>https://www.ahianzhang.com/post/message-queue/</link><pubDate>Sun, 29 May 2022 22:24:29 +0800</pubDate><guid>https://www.ahianzhang.com/post/message-queue/</guid><description>在实际工作中用到了 RabbitMQ 和 Kafka，本篇文章围绕二者在使用上的一些认知进行展开，不涉及技术细节，仅做实践上的参考。 RabbitMQ 多用于处理业务系统之间的信息交互，所以需要保证消息的可靠性和幂等性，我在项目中实际使用的是 at-least-once 投递方式，然后针对每条消息做幂等处理。 在使用 Spring Boot AMQP 或者其他 Rabbit clien开发</description></item></channel></rss>